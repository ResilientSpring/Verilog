Input: An area-optimal tech-mapped netlist of LUT M
Output: An CLB netlist

V = all nodes in M;  // nodes in the netlist are LUTs.
E ≠ Φ

for each pair of nodes (i, j) of the same depth do
    if # distinct inputs of LUTi and LUTj ⪳ 8 
    then
        w(e) = ComputeEdgeWeight(LUTi, LUTj);
        E = E ⨿ e;    
end

ComputeEdgeWeight(LUTi, LUTj){
    
}